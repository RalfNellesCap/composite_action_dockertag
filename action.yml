name: 'composite_action_dockertag'
description: 'macro read branchname output Dockertag and Dockertag SHA'
outputs:
  docker-tag:
    value: ${{ steps.docker-tag.outputs.docker-tag }}
  docker-sha:
    value: ${{ steps.docker-tag.outputs.docker-sha }}
runs:
  using: "composite"
  steps:
    - name: Echo input vars
      run: |
        echo "BRANCH_PREFIX: ${{env.BRANCH_PREFIX }}"
        echo "JIRA_TicketID: ${{env.JIRA_TicketID}}"
        echo "AVCHECK_VERSION: ${{env.AVCHECK_VERSION}}"
        echo "github.sha: ${{ github.sha }}"
      shell: bash
      # Assemble the Dockertag for the build image based on the type of the branch
      # Same convention as implemented OPS-1664
    - name: Assemble Dockertag for develop
      id: docker-tag
      run: |
        echo "::set-output name=docker-sha::$(echo "")"
        if [[ ${{env.BRANCH_PREFIX }} == 'develop' ]]; then
          echo "::set-output name=docker-tag::$(echo "develop_latest")"
        elif [[ ${{env.BRANCH_PREFIX }} == 'feature' ]]; then
          echo "::set-output name=docker-tag::$(echo "feature_${{env.JIRA_TicketID}}_latest")"
        elif [[ ${{env.BRANCH_PREFIX }} == 'release' ]]; then
          echo "::set-output name=docker-tag::$(echo "release_${{env.AVCHECK_VERSION}}_latest")"
          echo "::set-output name=docker-sha::$(echo "release_${{env.AVCHECK_VERSION}}_${{ github.sha }}")"
        elif [[ ${{env.BRANCH_PREFIX }} == 'hotfix' ]]; then
         echo "::set-output name=docker-tag::$(echo "feature_${{env.JIRA_TicketID}}_latest")"
        elif [[ ${{env.BRANCH_PREFIX }} == 'master' ]]; then
          echo "::set-output name=docker-tag::$(echo "master_${{env.AVCHECK_VERSION}}_latest")"
          echo "::set-output name=docker-sha::$(echo "master_${{env.AVCHECK_VERSION}}_${{ github.sha }}")"
        else
          echo "No match of branch name with naming condition - Workfow will abort!"
        fi        
      shell: bash
    - name: Echo output vars
      run: |
        echo "docker-tag: ${{ steps.docker-tag.outputs.docker-tag }}"
        echo "docker-sha: ${{ steps.docker-tag.outputs.docker-sha }}"
      shell: bash	

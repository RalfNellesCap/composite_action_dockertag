name: 'composite_action_dockertag'
description: 'macro read branchname output Dockertag and Dockertag SHA'
inputs:
  AVCHECK_VERSION:
    required: true
    default: ''
  GIT_SHA:
    required: true
    default: ''
  JIRA_TicketID:
    required: true
    default: ''  
  BRANCH_PREFIX:
    required: true
    default: ''
outputs:
  docker-tag:
    value: ${{ steps.docker-tag.outputs.docker-tag }}
  docker-sha:
    value: ${{ steps.docker-tag.outputs.docker-sha }}
runs:
  using: "composite"
  steps:
    - name: start macro
      run:  print("hallo welt")
      shell: python3
    - name: start macro
      run:  echo macro start
      shell: bash
      # Assemble the Dockertag for the build image based on the type of the branch
      # Same convention as implemented OPS-1664
    - if: "${{ inputs.BRANCH_PREFIX == 'feature' }}"
      name: Assemble Dockertag for feature
      id: docker-tag
      run: |
        echo "::set-output name=docker-tag::$(echo "feature_${{env.JIRA_TicketID}}_latest")"
        echo "::set-output name=docker-sha::$(echo "")"
        echo "Branch: ${{ inputs.BRANCH_PREFIX }}"
        echo "Tag-latest: feature_${{env.JIRA_TicketID}}_latest"
        echo "tag-sha:"
        echo "git-SHA:${{env.GITHUB_SHA}}"
        echo macro end
      shell: bash
